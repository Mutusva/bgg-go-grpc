// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages/bgg.proto

package bggpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BoardGame struct {
	Gid                  int32    `protobuf:"varint,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ranking              int32    `protobuf:"varint,3,opt,name=ranking,proto3" json:"ranking,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoardGame) Reset()         { *m = BoardGame{} }
func (m *BoardGame) String() string { return proto.CompactTextString(m) }
func (*BoardGame) ProtoMessage()    {}
func (*BoardGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e58b8a4c56c4ea6, []int{0}
}

func (m *BoardGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoardGame.Unmarshal(m, b)
}
func (m *BoardGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoardGame.Marshal(b, m, deterministic)
}
func (m *BoardGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoardGame.Merge(m, src)
}
func (m *BoardGame) XXX_Size() int {
	return xxx_messageInfo_BoardGame.Size(m)
}
func (m *BoardGame) XXX_DiscardUnknown() {
	xxx_messageInfo_BoardGame.DiscardUnknown(m)
}

var xxx_messageInfo_BoardGame proto.InternalMessageInfo

func (m *BoardGame) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *BoardGame) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BoardGame) GetRanking() int32 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *BoardGame) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type FindBoardgamesByNameRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindBoardgamesByNameRequest) Reset()         { *m = FindBoardgamesByNameRequest{} }
func (m *FindBoardgamesByNameRequest) String() string { return proto.CompactTextString(m) }
func (*FindBoardgamesByNameRequest) ProtoMessage()    {}
func (*FindBoardgamesByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e58b8a4c56c4ea6, []int{1}
}

func (m *FindBoardgamesByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBoardgamesByNameRequest.Unmarshal(m, b)
}
func (m *FindBoardgamesByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBoardgamesByNameRequest.Marshal(b, m, deterministic)
}
func (m *FindBoardgamesByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBoardgamesByNameRequest.Merge(m, src)
}
func (m *FindBoardgamesByNameRequest) XXX_Size() int {
	return xxx_messageInfo_FindBoardgamesByNameRequest.Size(m)
}
func (m *FindBoardgamesByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBoardgamesByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindBoardgamesByNameRequest proto.InternalMessageInfo

func (m *FindBoardgamesByNameRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *FindBoardgamesByNameRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindBoardgamesByNameRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type FindBoardgamesByNameResponse struct {
	Count                uint32     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Game                 *BoardGame `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindBoardgamesByNameResponse) Reset()         { *m = FindBoardgamesByNameResponse{} }
func (m *FindBoardgamesByNameResponse) String() string { return proto.CompactTextString(m) }
func (*FindBoardgamesByNameResponse) ProtoMessage()    {}
func (*FindBoardgamesByNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e58b8a4c56c4ea6, []int{2}
}

func (m *FindBoardgamesByNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBoardgamesByNameResponse.Unmarshal(m, b)
}
func (m *FindBoardgamesByNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBoardgamesByNameResponse.Marshal(b, m, deterministic)
}
func (m *FindBoardgamesByNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBoardgamesByNameResponse.Merge(m, src)
}
func (m *FindBoardgamesByNameResponse) XXX_Size() int {
	return xxx_messageInfo_FindBoardgamesByNameResponse.Size(m)
}
func (m *FindBoardgamesByNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBoardgamesByNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindBoardgamesByNameResponse proto.InternalMessageInfo

func (m *FindBoardgamesByNameResponse) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *FindBoardgamesByNameResponse) GetGame() *BoardGame {
	if m != nil {
		return m.Game
	}
	return nil
}

func init() {
	proto.RegisterType((*BoardGame)(nil), "bgg.BoardGame")
	proto.RegisterType((*FindBoardgamesByNameRequest)(nil), "bgg.FindBoardgamesByNameRequest")
	proto.RegisterType((*FindBoardgamesByNameResponse)(nil), "bgg.FindBoardgamesByNameResponse")
}

func init() { proto.RegisterFile("messages/bgg.proto", fileDescriptor_4e58b8a4c56c4ea6) }

var fileDescriptor_4e58b8a4c56c4ea6 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xb1, 0x4f, 0xf3, 0x30,
	0x10, 0xc5, 0xbf, 0x7c, 0x4d, 0x8b, 0x72, 0x28, 0x55, 0x64, 0x55, 0x28, 0x02, 0x86, 0x90, 0xa9,
	0x53, 0x41, 0x65, 0x64, 0xcb, 0x00, 0x1b, 0x83, 0x59, 0x10, 0x12, 0x42, 0x4e, 0x73, 0xb5, 0x2c,
	0x6a, 0x3b, 0xb5, 0x13, 0xa4, 0xfe, 0xf7, 0xc8, 0x17, 0xd2, 0xa9, 0xea, 0x76, 0xcf, 0x7e, 0x7e,
	0x3f, 0xdf, 0x1d, 0x30, 0x8d, 0xde, 0x0b, 0x89, 0xfe, 0xbe, 0x96, 0x72, 0xd5, 0x3a, 0xdb, 0x59,
	0x36, 0xa9, 0xa5, 0x2c, 0x3f, 0x21, 0xa9, 0xac, 0x70, 0xcd, 0x8b, 0xd0, 0xc8, 0x32, 0x98, 0x48,
	0xd5, 0xe4, 0x51, 0x11, 0x2d, 0xa7, 0x3c, 0x94, 0x8c, 0x41, 0x6c, 0x84, 0xc6, 0xfc, 0x7f, 0x11,
	0x2d, 0x13, 0x4e, 0x35, 0xcb, 0xe1, 0xc2, 0x09, 0xf3, 0xad, 0x8c, 0xcc, 0x27, 0xe4, 0x1c, 0x65,
	0x78, 0xdf, 0xbb, 0x5d, 0x1e, 0x93, 0x39, 0x94, 0xa5, 0x80, 0x9b, 0x67, 0x65, 0x1a, 0x42, 0x48,
	0xa1, 0xd1, 0x57, 0x87, 0x57, 0xa1, 0x91, 0xe3, 0xbe, 0x47, 0xdf, 0xb1, 0x05, 0x4c, 0xf7, 0x3d,
	0xba, 0x03, 0x21, 0x13, 0x3e, 0x88, 0x70, 0xba, 0x53, 0x5a, 0x75, 0x44, 0x4d, 0xf9, 0x20, 0xd8,
	0x15, 0xcc, 0xec, 0x76, 0xeb, 0xb1, 0x23, 0x6a, 0xca, 0xff, 0x54, 0xf9, 0x0e, 0xb7, 0xa7, 0x11,
	0xbe, 0xb5, 0xc6, 0x63, 0x48, 0xdb, 0xd8, 0xde, 0x74, 0xc4, 0x48, 0xf9, 0x20, 0x58, 0x09, 0xb1,
	0x1c, 0x1b, 0xbb, 0x5c, 0xcf, 0x57, 0x61, 0x2c, 0xc7, 0x41, 0x70, 0xba, 0x5b, 0x7b, 0xc8, 0x8e,
	0xa9, 0x6f, 0xe8, 0x7e, 0xd4, 0x06, 0xd9, 0x17, 0x2c, 0x4e, 0xd1, 0x58, 0x41, 0x09, 0x67, 0x7a,
	0xbd, 0xbe, 0x3b, 0xe3, 0x18, 0xbe, 0x5a, 0xfe, 0x7b, 0x88, 0xaa, 0xec, 0x63, 0x3e, 0xee, 0xea,
	0xa9, 0x96, 0xb2, 0xad, 0xeb, 0x19, 0xad, 0xeb, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf0, 0xd5,
	0xbd, 0x00, 0xc4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BoardgameServiceClient is the client API for BoardgameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BoardgameServiceClient interface {
	FindBoardgamesByName(ctx context.Context, in *FindBoardgamesByNameRequest, opts ...grpc.CallOption) (BoardgameService_FindBoardgamesByNameClient, error)
}

type boardgameServiceClient struct {
	cc *grpc.ClientConn
}

func NewBoardgameServiceClient(cc *grpc.ClientConn) BoardgameServiceClient {
	return &boardgameServiceClient{cc}
}

func (c *boardgameServiceClient) FindBoardgamesByName(ctx context.Context, in *FindBoardgamesByNameRequest, opts ...grpc.CallOption) (BoardgameService_FindBoardgamesByNameClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BoardgameService_serviceDesc.Streams[0], "/bgg.BoardgameService/FindBoardgamesByName", opts...)
	if err != nil {
		return nil, err
	}
	x := &boardgameServiceFindBoardgamesByNameClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BoardgameService_FindBoardgamesByNameClient interface {
	Recv() (*FindBoardgamesByNameResponse, error)
	grpc.ClientStream
}

type boardgameServiceFindBoardgamesByNameClient struct {
	grpc.ClientStream
}

func (x *boardgameServiceFindBoardgamesByNameClient) Recv() (*FindBoardgamesByNameResponse, error) {
	m := new(FindBoardgamesByNameResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BoardgameServiceServer is the server API for BoardgameService service.
type BoardgameServiceServer interface {
	FindBoardgamesByName(*FindBoardgamesByNameRequest, BoardgameService_FindBoardgamesByNameServer) error
}

// UnimplementedBoardgameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBoardgameServiceServer struct {
}

func (*UnimplementedBoardgameServiceServer) FindBoardgamesByName(req *FindBoardgamesByNameRequest, srv BoardgameService_FindBoardgamesByNameServer) error {
	return status.Errorf(codes.Unimplemented, "method FindBoardgamesByName not implemented")
}

func RegisterBoardgameServiceServer(s *grpc.Server, srv BoardgameServiceServer) {
	s.RegisterService(&_BoardgameService_serviceDesc, srv)
}

func _BoardgameService_FindBoardgamesByName_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindBoardgamesByNameRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BoardgameServiceServer).FindBoardgamesByName(m, &boardgameServiceFindBoardgamesByNameServer{stream})
}

type BoardgameService_FindBoardgamesByNameServer interface {
	Send(*FindBoardgamesByNameResponse) error
	grpc.ServerStream
}

type boardgameServiceFindBoardgamesByNameServer struct {
	grpc.ServerStream
}

func (x *boardgameServiceFindBoardgamesByNameServer) Send(m *FindBoardgamesByNameResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BoardgameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bgg.BoardgameService",
	HandlerType: (*BoardgameServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindBoardgamesByName",
			Handler:       _BoardgameService_FindBoardgamesByName_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "messages/bgg.proto",
}
